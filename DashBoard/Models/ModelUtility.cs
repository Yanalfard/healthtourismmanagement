using System;
using System.Collections.Generic;
using System.Windows.Controls;

namespace DashBoard.Models
{
    /// <summary>
    /// A utility class for handling model data and localization
    /// </summary>
    public class ModelUtility
    {
        /// <summary>
        /// The list of current datagrids rows
        /// </summary>
        public List<DataGridRow> DataGridRows { get; set; }

        /// <summary>
        /// Dictionary to localize Model labels
        /// </summary>
        public Dictionary<string, string> ArrTableLabel = new Dictionary<string, string> {
            { "id", "شناسه" },
            { "Id", "شناسه" },
            { "Username", "نام کاربری" },
            { "Password", "گذرواژه" },
            { "IsHelthApple", "سیب سلامت" },
            { "TicketId", "شناسه بلیط" },
            { "ImageId", "شناسه عکس" },
            { "IsRegistered", "ثبت نام شده" },
            { "UserPassId", "شناسه گذرواژه" },
            { "Email", "پست اینترنتی" },
            { "TellNo", "شماره تلفن" },
            { "Data", "داده" },
            { "Name", "نام" },
            { "SectionId", "شناسه بخش" },
            { "DoctorOperationId", "شناسه عمل" },
            { "SectionName", "نام بخش" },
            { "PatientId", "شناسه بیمار" },
            { "SicknessId", "شناسه بیماری" },
            { "DoctorId", "شناسه دکتر" },
            { "HospitalId", "شناسه بیمارستان" },
            { "BeforeCureDesc", "توضیحات قبل از عمل" },
            { "AfterCureDesc", "توضیحات بعد از عمل" },
            { "IsMan", "مذکر" },
            { "BirthDate", "تاریخ تولد" },
            { "CountryId", "شناسه کشور" },
            { "CityId", "شناسه شهر" },
            { "PassNoOrIdentification", "کد ملی/پاسپورت" },
            { "HelthCode", "شماره سلامت" },
            { "Address", "آدرس" },
            { "Payed", "مبغ پرداختی" },
            { "CoShare", "پورسانت" },
            { "DateReleased", "تاریخ ترخیص" },
            { "Status", "وضعیت" },
            { "TimeRegistered", "زمان ثبت نام" },
            { "NewsId", "شناسه خبر" },
            { "Title", "عنوان" },
            { "MainData", "داده اصلی" },
            { "MainDataRtf", "داده سنگین" },
            { "Image", "عکس" },
            { "Percentage", "درصد" },
            { "Description", "توضیحات" },
            { "Longitude", "طول جغرافیایی"},
            { "Latitude", "عرض جغرافیایی" },
            { "OperationName", "نام عمل" },
            { "OperationPrice", "قیمت عمل" },
            { "NowActive", "فعال" } };


        /// <summary>
        /// Fills a dataGrid 
        /// </summary>
        /// <param name="datagridMain"></param>
        /// <param name="modelList"></param>
        /// <param name="filter">Filter accissible Fields and make them readonly</param>
        public void FillDatagrid<T>(DataGrid datagridMain, List<T> modelList, bool filter)
        {
            datagridMain.ItemsSource = modelList;
            datagridMain.AutoGeneratedColumns += (s, e) =>
            {
                int count = datagridMain.Columns.Count;
                string translated = "";
                for (int i = 0; i < datagridMain.Columns.Count; i++)
                {
                    ArrTableLabel.TryGetValue(datagridMain.Columns[i].Header.ToString(), out translated);
                    datagridMain.Columns[i].Header = translated;
                    FilterAccessibleFields(datagridMain);
                }
            };
        }

        /// <summary>
        /// Generates rows for the datagrid
        /// </summary>
        /// <param name="datagridMain"></param>
        [Obsolete]
        private List<DataGridRow> CreateRows(DataGrid datagridMain)
        {
            //datagridMain.EnableRowVirtualization = true;
            List<DataGridRow> dataGridRows = new List<DataGridRow>();
            for (int i = 0; i < datagridMain.Items.Count; i++)
            {
                DataGridRow row = (DataGridRow)datagridMain.ItemContainerGenerator
                                               .ContainerFromIndex(i);
                dataGridRows.Add(row);
            }
            return dataGridRows;
        }

        /// <summary>
        /// Makes fields that are unmodifyable through the grids and makes them ReadOnly
        /// </summary>
        /// <param name="mainDatagrid"></param>
        private void FilterAccessibleFields(DataGrid mainDatagrid)
        {
            foreach (var column in mainDatagrid.Columns)
            {
                if (column.Header.ToString().Contains("شناسه")) column.IsReadOnly = true;
                if (column.Header.ToString().Contains("عکس")) column.IsReadOnly = true;
            }
        }


    }

}

